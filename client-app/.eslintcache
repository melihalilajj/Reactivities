[{"C:\\Users\\Mejreme Halilaj\\Reactivities\\client-app\\src\\index.tsx":"1","C:\\Users\\Mejreme Halilaj\\Reactivities\\client-app\\src\\reportWebVitals.ts":"2","C:\\Users\\Mejreme Halilaj\\Reactivities\\client-app\\src\\app\\layout\\App.tsx":"3","C:\\Users\\Mejreme Halilaj\\Reactivities\\client-app\\src\\app\\layout\\NavBar.tsx":"4","C:\\Users\\Mejreme Halilaj\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityDashboard.tsx":"5","C:\\Users\\Mejreme Halilaj\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityList.tsx":"6","C:\\Users\\Mejreme Halilaj\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetails.tsx":"7","C:\\Users\\Mejreme Halilaj\\Reactivities\\client-app\\src\\features\\activities\\form\\ActivityForm.tsx":"8","C:\\Users\\Mejreme Halilaj\\Reactivities\\client-app\\src\\app\\api\\agent.ts":"9","C:\\Users\\Mejreme Halilaj\\Reactivities\\client-app\\src\\app\\layout\\LoadingComponent.tsx":"10","C:\\Users\\Mejreme Halilaj\\Reactivities\\client-app\\src\\app\\stores\\store.ts":"11","C:\\Users\\Mejreme Halilaj\\Reactivities\\client-app\\src\\app\\stores\\activityStore.ts":"12","C:\\Users\\Mejreme Halilaj\\Reactivities\\client-app\\src\\features\\home\\HomePage.tsx":"13","C:\\Users\\Mejreme Halilaj\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityListItem.tsx":"14","C:\\Users\\Mejreme Halilaj\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetailedHeader.tsx":"15","C:\\Users\\Mejreme Halilaj\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetailedInfo.tsx":"16","C:\\Users\\Mejreme Halilaj\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetailedChat.tsx":"17","C:\\Users\\Mejreme Halilaj\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetailedSidebar.tsx":"18","C:\\Users\\Mejreme Halilaj\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityFilters.tsx":"19","C:\\Users\\Mejreme Halilaj\\Reactivities\\client-app\\src\\features\\errors\\TestError.tsx":"20","C:\\Users\\Mejreme Halilaj\\Reactivities\\client-app\\src\\features\\errors\\NotFound.tsx":"21","C:\\Users\\Mejreme Halilaj\\Reactivities\\client-app\\src\\features\\errors\\ValidationErrors.tsx":"22","C:\\Users\\Mejreme Halilaj\\Reactivities\\client-app\\src\\app\\stores\\commonStore.ts":"23","C:\\Users\\Mejreme Halilaj\\Reactivities\\client-app\\src\\features\\errors\\ServerError.tsx":"24","C:\\Users\\Mejreme Halilaj\\Reactivities\\client-app\\src\\app\\common\\form\\MyTextInput.tsx":"25","C:\\Users\\Mejreme Halilaj\\Reactivities\\client-app\\src\\features\\activities\\form\\MyTextArea.tsx":"26","C:\\Users\\Mejreme Halilaj\\Reactivities\\client-app\\src\\app\\common\\options\\categoryOptions.ts":"27","C:\\Users\\Mejreme Halilaj\\Reactivities\\client-app\\src\\features\\activities\\form\\MySelectInput.tsx":"28","C:\\Users\\Mejreme Halilaj\\Reactivities\\client-app\\src\\app\\common\\form\\MyDateInput.tsx":"29"},{"size":981,"mtime":1645476421650,"results":"30","hashOfConfig":"31"},{"size":425,"mtime":499162500000,"results":"32","hashOfConfig":"31"},{"size":1577,"mtime":1645400415354,"results":"33","hashOfConfig":"31"},{"size":827,"mtime":1645390521997,"results":"34","hashOfConfig":"31"},{"size":996,"mtime":1642900970254,"results":"35","hashOfConfig":"31"},{"size":834,"mtime":1642902449686,"results":"36","hashOfConfig":"31"},{"size":1282,"mtime":1642902722999,"results":"37","hashOfConfig":"31"},{"size":4147,"mtime":1645480702267,"results":"38","hashOfConfig":"31"},{"size":2491,"mtime":1645401438400,"results":"39","hashOfConfig":"31"},{"size":381,"mtime":1641921979858,"results":"40","hashOfConfig":"31"},{"size":467,"mtime":1645398882528,"results":"41","hashOfConfig":"31"},{"size":4175,"mtime":1645479440560,"results":"42","hashOfConfig":"31"},{"size":797,"mtime":1642902063714,"results":"43","hashOfConfig":"31"},{"size":1609,"mtime":1645478840513,"results":"44","hashOfConfig":"31"},{"size":2053,"mtime":1645479164172,"results":"45","hashOfConfig":"31"},{"size":1723,"mtime":1645479313963,"results":"46","hashOfConfig":"31"},{"size":2409,"mtime":1642899645944,"results":"47","hashOfConfig":"31"},{"size":2436,"mtime":1642899750637,"results":"48","hashOfConfig":"31"},{"size":576,"mtime":1642901394950,"results":"49","hashOfConfig":"31"},{"size":2028,"mtime":1645400748570,"results":"50","hashOfConfig":"31"},{"size":630,"mtime":1645393454314,"results":"51","hashOfConfig":"31"},{"size":507,"mtime":1645397484368,"results":"52","hashOfConfig":"31"},{"size":321,"mtime":1645398665211,"results":"53","hashOfConfig":"31"},{"size":734,"mtime":1645400094241,"results":"54","hashOfConfig":"31"},{"size":619,"mtime":1645471774231,"results":"55","hashOfConfig":"31"},{"size":639,"mtime":1645473345884,"results":"56","hashOfConfig":"31"},{"size":267,"mtime":1645474740599,"results":"57","hashOfConfig":"31"},{"size":925,"mtime":1645474332598,"results":"58","hashOfConfig":"31"},{"size":798,"mtime":1645476815708,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"y0yfni",{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"64"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"64"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"64"},"C:\\Users\\Mejreme Halilaj\\Reactivities\\client-app\\src\\index.tsx",[],"C:\\Users\\Mejreme Halilaj\\Reactivities\\client-app\\src\\reportWebVitals.ts",[],["123","124"],"C:\\Users\\Mejreme Halilaj\\Reactivities\\client-app\\src\\app\\layout\\App.tsx",[],"C:\\Users\\Mejreme Halilaj\\Reactivities\\client-app\\src\\app\\layout\\NavBar.tsx",[],"C:\\Users\\Mejreme Halilaj\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityDashboard.tsx",[],"C:\\Users\\Mejreme Halilaj\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityList.tsx",["125"],"import { group } from \"console\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React, { Fragment } from \"react\";\r\nimport {Header} from \"semantic-ui-react\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport ActivityListItem from \"./ActivityListItem\";\r\n\r\n\r\nexport default observer( function ActivityList(){\r\n    const {activityStore} = useStore ();\r\n    const {groupedActivities} = activityStore;\r\n\r\n  \r\n\r\n    return(\r\n        <>\r\n        {groupedActivities.map(([group, activities]) =>(\r\n           <Fragment key={group}>\r\n               <Header sub color='teal'>\r\n                {group}\r\n               </Header>\r\n                {activities.map(activity => (\r\n               <ActivityListItem key={activity.id} activity={activity}/>\r\n            ))}\r\n           </Fragment>\r\n        ))}\r\n        </>\r\n\r\n    )\r\n})","C:\\Users\\Mejreme Halilaj\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetails.tsx",[],"C:\\Users\\Mejreme Halilaj\\Reactivities\\client-app\\src\\features\\activities\\form\\ActivityForm.tsx",[],"C:\\Users\\Mejreme Halilaj\\Reactivities\\client-app\\src\\app\\api\\agent.ts",["126"],"import axios, { AxiosError, AxiosResponse } from \"axios\";\r\nimport { resolve } from \"dns\";\r\nimport { toast } from \"react-toastify\";\r\nimport { history } from \"../..\";\r\nimport { Activity } from \"../models/activity\";\r\nimport { store } from \"../stores/store\";\r\n\r\nconst sleep = (delay: number) => {\r\n    return new Promise((resolve) => {\r\n        setTimeout(resolve, delay)\r\n    })\r\n}\r\n\r\naxios.defaults.baseURL = 'http://localhost:5000/api';\r\n\r\naxios.interceptors.response.use(async response => {\r\n        await sleep(1000);\r\n        return response;\r\n}, (error: AxiosError) => {\r\n    const {data, status,config} = error.response!;\r\n    switch (status){\r\n        case 400:\r\n            if(typeof data === 'string'){\r\n                toast.error(data);\r\n            }\r\n            if(config.method === 'get' && data.errors.hasOwnProperty('id')){\r\n                history.push('/not-found');\r\n\r\n            }\r\n            if(data.errors){\r\n                const modalStateErrors = [];\r\n                for(const key in data.errors){\r\n                    if(data.errors[key]){\r\n                        modalStateErrors.push(data.errors[key])\r\n                    }\r\n                }\r\n                throw modalStateErrors.flat();\r\n            }\r\n            break;\r\n        case 401:\r\n            toast.error('unauthorised');\r\n            break;\r\n        case 404:\r\n            history.push('/not-found');\r\n            break;\r\n        case 500:\r\n                store.commonStore.setServerError(data);\r\n                history.push('/server-error');\r\n                break;    \r\n    }\r\n    return Promise.reject(error);\r\n})\r\n\r\nconst responseBody = <T> (response: AxiosResponse<T>) => response.data;\r\n\r\nconst requests = {\r\n    get: <T> (url: string) => axios.get<T>(url).then(responseBody),\r\n    post: <T> (url: string, body: {}) => axios.post<T>(url, body).then(responseBody),\r\n    put: <T> (url: string, body: {}) => axios.put<T>(url, body).then(responseBody),\r\n    del: <T> (url: string) => axios.delete<T>(url).then(responseBody)\r\n}\r\n\r\nconst Activities = {\r\n    list: () => requests.get<Activity[]>('/activities'),\r\n    details: (id: string) => requests.get<Activity>(`/activities/${id}`),\r\n    create: (activity: Activity) => axios.post<void>(`/activities`,activity),\r\n    update: (activity: Activity) => axios.put<void>(`/activities/${activity.id}`,activity),\r\n    delete: (id:string) => axios.delete<void>(`/activities/${id}`)\r\n}\r\n\r\nconst agent = {\r\n    Activities\r\n}\r\n\r\nexport default agent;","C:\\Users\\Mejreme Halilaj\\Reactivities\\client-app\\src\\app\\layout\\LoadingComponent.tsx",[],"C:\\Users\\Mejreme Halilaj\\Reactivities\\client-app\\src\\app\\stores\\store.ts",[],"C:\\Users\\Mejreme Halilaj\\Reactivities\\client-app\\src\\app\\stores\\activityStore.ts",["127"],"import {makeAutoObservable, runInAction} from \"mobx\";\r\nimport { act } from \"react-dom/test-utils\";\r\nimport agent from \"../api/agent\";\r\nimport { Activity } from \"../models/activity\";\r\nimport { format } from \"date-fns\";\r\n\r\n\r\n\r\nexport default class ActivityStore{\r\n  activityRegistry = new Map<string, Activity>();\r\n  selectedActivity: Activity | undefined = undefined;\r\n  editMode = false;\r\n  loading = false;\r\n  loadingInitial = false;\r\n\r\n    constructor(){\r\n        makeAutoObservable(this)\r\n    }\r\n\r\n\r\n    get activitiesByDate(){\r\n         return Array.from(this.activityRegistry.values()).sort((a, b) =>\r\n                a.date!.getDate() - b.date!.getTime());\r\n    }\r\n\r\n    get groupedActivities(){\r\n        return Object.entries(\r\n            this.activitiesByDate.reduce((activities, activity) => {\r\n                const date=format (activity.date!, 'dd MMM yyyy');\r\n                activities[date]=activities[date] ? [...activities[date], activity] : [activity];\r\n                return activities;\r\n            },{} as {[key: string]: Activity[]} )\r\n        )\r\n\r\n    }\r\n\r\n    loadActivities = async () => {\r\n        this.loadingInitial=true;\r\n        try{\r\n            const activities = await agent.Activities.list();      \r\n               activities.forEach(activity =>{\r\n                   this.setActivity(activity);\r\n                  })\r\n                  this.setLoadingInitial(false);\r\n        }catch(error){\r\n            console.log(error);\r\n                this.setLoadingInitial(false);\r\n        }\r\n    }\r\n    \r\n    loadActivity = async(id: string) =>{\r\n        let activity = this.getActivity(id);\r\n        if(activity){\r\n            this.selectedActivity=activity;\r\n            return activity;\r\n        }else{\r\n            this.loadingInitial=true;\r\n            try{\r\n                activity=await agent.Activities.details(id);\r\n                this.setActivity(activity);\r\n                runInAction(() =>{\r\n                    this.selectedActivity=activity;\r\n                })\r\n                this.setLoadingInitial(false);\r\n                return activity;\r\n            }catch(error){\r\n                console.log(error);\r\n                this.setLoadingInitial(false);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    private setActivity = (activity: Activity) =>{\r\n        activity.date=new Date(activity.date!);\r\n        this.activityRegistry.set(activity.id, activity);\r\n    }\r\n\r\n\r\n\r\n    private getActivity = (id: string) =>{\r\n        return this.activityRegistry.get(id);\r\n    }\r\n\r\n    setLoadingInitial = (state: boolean) =>{\r\n        this.loadingInitial = state;\r\n    }\r\n\r\n    createActivity = async (activity: Activity) => {\r\n        this.loading = true;\r\n           try{\r\n            await agent.Activities.create(activity);\r\n            runInAction(() => {\r\n                this.activityRegistry.set(activity.id, activity);\r\n                this.selectedActivity = activity;\r\n                this.editMode = false;\r\n                this.loading = false;\r\n            })\r\n        }catch(error){\r\n            console.log(error);\r\n            runInAction (() => {\r\n                this.loading = false;\r\n            })\r\n        }\r\n    }\r\n\r\n    updateActivity = async (activity: Activity) => {\r\n        this.loading=true;\r\n        try{\r\n            await agent.Activities.update(activity);\r\n            runInAction(() => {\r\n                this.activityRegistry.set(activity.id, activity);\r\n                this.selectedActivity = activity;\r\n                this.editMode = false;\r\n                this.loading = false;\r\n            })\r\n        }catch(error){\r\n            console.log(error);\r\n            runInAction(() => {\r\n                this.loading = false;\r\n            })\r\n        }\r\n    }\r\n\r\n    deleteActivity = async (id: string) => {\r\n        this.loading = true;\r\n        try{\r\n            await agent.Activities.delete(id);\r\n            runInAction(() => {\r\n                this.activityRegistry.delete(id);\r\n                this.loading = false;\r\n            })\r\n        }catch (error){\r\n            console.log(error);\r\n            runInAction(() => {\r\n                this.loading = false;\r\n            })\r\n        }\r\n    }\r\n}","C:\\Users\\Mejreme Halilaj\\Reactivities\\client-app\\src\\features\\home\\HomePage.tsx",[],"C:\\Users\\Mejreme Halilaj\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityListItem.tsx",[],"C:\\Users\\Mejreme Halilaj\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetailedHeader.tsx",[],"C:\\Users\\Mejreme Halilaj\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetailedInfo.tsx",[],"C:\\Users\\Mejreme Halilaj\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetailedChat.tsx",[],"C:\\Users\\Mejreme Halilaj\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetailedSidebar.tsx",[],"C:\\Users\\Mejreme Halilaj\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityFilters.tsx",[],"C:\\Users\\Mejreme Halilaj\\Reactivities\\client-app\\src\\features\\errors\\TestError.tsx",[],"C:\\Users\\Mejreme Halilaj\\Reactivities\\client-app\\src\\features\\errors\\NotFound.tsx",[],"C:\\Users\\Mejreme Halilaj\\Reactivities\\client-app\\src\\features\\errors\\ValidationErrors.tsx",[],"C:\\Users\\Mejreme Halilaj\\Reactivities\\client-app\\src\\app\\stores\\commonStore.ts",[],"C:\\Users\\Mejreme Halilaj\\Reactivities\\client-app\\src\\features\\errors\\ServerError.tsx",[],"C:\\Users\\Mejreme Halilaj\\Reactivities\\client-app\\src\\app\\common\\form\\MyTextInput.tsx",[],"C:\\Users\\Mejreme Halilaj\\Reactivities\\client-app\\src\\features\\activities\\form\\MyTextArea.tsx",[],"C:\\Users\\Mejreme Halilaj\\Reactivities\\client-app\\src\\app\\common\\options\\categoryOptions.ts",[],"C:\\Users\\Mejreme Halilaj\\Reactivities\\client-app\\src\\features\\activities\\form\\MySelectInput.tsx",[],"C:\\Users\\Mejreme Halilaj\\Reactivities\\client-app\\src\\app\\common\\form\\MyDateInput.tsx",["128"],"import { useField } from 'formik';\r\nimport React from 'react';\r\nimport {Form, Label} from 'semantic-ui-react';\r\nimport DatePicker, {ReactDatePickerProps} from 'react-datepicker';\r\nimport { values } from 'mobx';\r\n\r\nexport default function MyDateInput(props: Partial<ReactDatePickerProps>){\r\n    const [field,meta,helpers]=useField(props.name!);\r\n    return (\r\n        <Form.Field error={meta.touched && !!meta.error}>\r\n          <DatePicker\r\n             {...field}\r\n             {...props}\r\n             selected={(field.value && new Date(field.value)) || null}\r\n             onChange={value => helpers.setValue(value)}\r\n          />\r\n            {meta.touched && meta.error? (\r\n                <Label basic color='red'>{meta.error}</Label>\r\n            ) : null}\r\n\r\n        </Form.Field>\r\n    )\r\n}",{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","severity":1,"message":"134","line":1,"column":10,"nodeType":"135","messageId":"136","endLine":1,"endColumn":15},{"ruleId":"133","severity":1,"message":"137","line":2,"column":10,"nodeType":"135","messageId":"136","endLine":2,"endColumn":17},{"ruleId":"133","severity":1,"message":"138","line":2,"column":10,"nodeType":"135","messageId":"136","endLine":2,"endColumn":13},{"ruleId":"133","severity":1,"message":"139","line":5,"column":10,"nodeType":"135","messageId":"136","endLine":5,"endColumn":16},"no-native-reassign",["140"],"no-negated-in-lhs",["141"],"@typescript-eslint/no-unused-vars","'group' is defined but never used.","Identifier","unusedVar","'resolve' is defined but never used.","'act' is defined but never used.","'values' is defined but never used.","no-global-assign","no-unsafe-negation"]